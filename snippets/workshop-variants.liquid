         {% assign field_label = "Name" %}
{% assign placeholder_text = "Enter your name" %}
{% assign required_field = true %}

<script>

  document.addEventListener("DOMContentLoaded", function () {
    let form = document.querySelector("form[action*='/cart/add']"); 
    if (!form) return;

    let referenceElement = document.querySelector(".swatch[data-option-index='0']");
    if (!referenceElement) return;

    function createButtonSelection(labelText, options, name, defaultValue) {
        let group = document.createElement("div");
        group.classList.add("product-form__controls-group");

        let label = document.createElement("label");
        label.textContent = labelText;
        label.classList.add("product-form__label");

        let buttonContainer = document.createElement("div");
        buttonContainer.classList.add("button-group", name.replace(/\s+/g, "-").toLowerCase()); // Unique class for each group

        let hiddenInput = document.createElement("input");
        hiddenInput.setAttribute("type", "hidden");
        hiddenInput.setAttribute("name", `properties[${name}]`);
        hiddenInput.value = defaultValue;

        options.forEach((option) => {
            let button = document.createElement("button");
            button.type = "button";
            button.textContent = option;
            button.classList.add("option-button");

            if (option === defaultValue) {
                button.classList.add("selected");
            }

            button.addEventListener("click", function () {
                // Only clear selection for buttons within the same group
                buttonContainer.querySelectorAll(".option-button").forEach(btn => {
                    btn.classList.remove("selected");
                });

                button.classList.add("selected");
                hiddenInput.value = option;

                if (name === "Product Type") {
                    updateColorOptions(option);
                }
            });

            buttonContainer.appendChild(button);
        });

        group.appendChild(label);
        group.appendChild(buttonContainer);
        group.appendChild(hiddenInput);
        return group;
    }

    function createColorOptions(options) {
        let colorGroup = document.createElement("div");
        colorGroup.classList.add("product-form__controls-group", "color-options");
        
        let colorLabel = document.createElement("span");
        colorLabel.innerHTML = "Select Color:";
        colorLabel.classList.add("product-form__label-color");

        let selectedColorName = document.createElement("span");
        selectedColorName.classList.add("selected-color-name");
        selectedColorName.style.fontWeight = "bold";
        selectedColorName.style.marginLeft = "10px";

        let colorContainer = document.createElement("div");
        colorContainer.classList.add("color-button-group");

        let hiddenInput = document.createElement("input");
        hiddenInput.setAttribute("type", "hidden");
        hiddenInput.setAttribute("name", "properties[Color]");
        colorGroup.appendChild(hiddenInput);

        let colorHexMap = {
            "Pink": "#ffc0cb",
            "White": "#ffffff",
            "Lavender": "#e6e6fa",
            "Light Denim": "#8d8cc4",
            "Dark Denim": "#1d1c7b"
        };

        options.forEach((color, index) => {
            let button = document.createElement("button");
            button.type = "button";
            button.classList.add("color-button");
            button.setAttribute("data-value", color);
            button.style.backgroundColor = colorHexMap[color] || color; 
            button.style.width = "30px";
            button.style.height = "30px";
            button.style.borderRadius = "50%";
            button.style.border = "1px solid #e2e2e2";
            button.style.margin = "5px";
            button.style.cursor = "pointer";

            if (index === 0) {
                button.classList.add("selected");
                hiddenInput.value = color;
                button.style.border = "1px solid black"; 
                selectedColorName.textContent = color; 
            }

            button.addEventListener("click", function () {
                document.querySelectorAll(".color-button").forEach(btn => {
                    btn.classList.remove("selected");
                    btn.style.border = "1px solid #e2e2e2";
                });
                button.classList.add("selected");
                button.style.border = "1px solid black"; 
                hiddenInput.value = color;
                selectedColorName.textContent = color; 
            });

            colorContainer.appendChild(button);
        });

        colorGroup.appendChild(colorLabel);
        colorGroup.appendChild(selectedColorName);
        colorGroup.appendChild(colorContainer);

        return colorGroup;
    }

    function insertAfter(newElement, referenceElement) {
        referenceElement.parentNode.insertBefore(newElement, referenceElement.nextSibling);
    }

    let productTypeField = createButtonSelection("Select Product Type:", ["Custom Hoodie", "Custom Denim Jacket"], "Product Type", "Custom Hoodie");
    let sizeField = createButtonSelection("Select Size:", ["2", "4", "6", "8", "10", "12", "14"], "Size", "2");
    let colorField = createColorOptions(["Pink", "White", "Lavender"]);

    insertAfter(productTypeField, referenceElement);
    insertAfter(colorField, productTypeField);
    insertAfter(sizeField, colorField);

    let nameField = document.createElement("div");
    nameField.classList.add("product-form__controls-group");
    nameField.innerHTML = `
        <label for="custom-name" class="product-form__label">Name <span class='required'>*</span></label>
        <input type="text" id="custom-name" name="properties[Name]" placeholder="Enter your name" required class="product-form__input">
    `;
    insertAfter(nameField, sizeField);

    function updateColorOptions(selectedProduct) {
        let newColors = selectedProduct === "Custom Hoodie" ? ["Pink", "White", "Lavender"] : ["Light Denim", "Dark Denim"];
        let newColorField = createColorOptions(newColors);
        colorField.replaceWith(newColorField);
        colorField = newColorField;
        insertAfter(colorField, productTypeField);
    }
});


</script>





<style>

  .option-button {
    background-color: #fff;
    color: #000;
    border: #e2e2e2 1px solid;
    border-radius:3px;
    margin: 0 8px 8px 0;
}
.option-button:hover {
    background-color: #fff;
    color: #000;
   border: #e2e2e2 1px solid;
}

  
  .option-button.selected {
    background-color: #000;
    color: #fff;
}
  
  
  button.color-button:hover {
    border: #e2e2e2 1px solid;
}
    .product-form__controls-group.color-options {
            display: grid;
        grid-template-columns: 1fr 5fr;
        gap: 6px;
        width: 100%;
        margin-bottom: 10px;
      font-size:13px !important;
      font-weight:700 !important;
    }
.color-button-group{
grid-column: span 2;
  
}
.selected-color-name{
  margin:0 !important;
}

  
    .product-form__label[for="custom-name"] {
        font-weight: 600;
        margin-bottom: 4px;
        display: block;
    }

    .product-form__input#custom-name {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 16px;
        outline: none;
        transition: border 0.2s ease-in-out;
    }

    .product-form__input#custom-name:focus {
        border-color: #000;
    }

    .product-form__controls-group .required {
        color: red;
    }

.color-button.selected{
  border-color:#000 !important;
}


.product-form__label-color{
  text-align:left !important;
  padding: 0 !important;
}
.checkout_btn_product .checkmark{

  display:none !important;
}

  

@media screen and (max-width: 769px) {
    .product-form__controls-group.color-options {
        grid-template-columns: 1fr 4fr !important;
    }
}

  
  
</style>