<style>
  .deleteButton{
     position: absolute;
    right: 0;
    top: 0;
    cursor: pointer;
    width: 12px;
    height: 24px;
  }
  .c-cart__custom-itemRemove{
    width:100%;
    height:100%;
  }
</style>
<script>
            // Function to fetch cart data from the server
            function fetchCartDataAndUpdateVariable() {
              fetch(window.Shopify.routes.root + 'cart.js', {
                method: 'GET',
                headers: {
                  'Content-Type': 'application/json'
                }
              })
              .then(response => {
                return response.json();
              })
              .then(data => {
                // Update the allCartData variable with the fetched data
                allCartData = data.items || [];
              })
              .catch(error => {
                console.error('Error fetching cart data:', error);
              });
            }

            // Initialize allCartData as an empty array
            var allCartData = [];

            // Function to handle delete button click
     function handleDeleteButtonClick(event) {
      // Get the timestamp value from the data attribute of the clicked button
      var timestamp = event.target.dataset.customizedTimestamp;

      // Array to store the IDs of items to delete
      var itemIdsToDelete = [];

      // Iterate over each item in the cart data
      allCartData.forEach(function(item) {
          // Check if the item has the "_Timestamp" property equal to the timestamp
          if (item.properties && item.properties._Timestamp === timestamp) {
              // If it matches the condition, store its ID
              itemIdsToDelete.push(item.key);
          }
      });

      // Check if any item IDs were found
      if (itemIdsToDelete.length > 0) {
          // Log items to delete
          console.log("Items to delete:", itemIdsToDelete);

          // Define a function to delete items one by one
          function deleteItemsSequentially(index) {
              if (index < itemIdsToDelete.length) {
                  var itemIdToDelete = itemIdsToDelete[index];
                  console.log("Deleting item with ID:", itemIdToDelete);

                  // Construct the updates object for the fetch request
                  var updates = {};
                  updates[itemIdToDelete] = 0; // Set the quantity to 0 to delete the item

                  // Send update request for the item
                  fetch(window.Shopify.routes.root + 'cart/update.js', {
                      method: 'POST',
                      headers: {
                          'Content-Type': 'application/json'
                      },
                      body: JSON.stringify({ updates })
                  })
                  .then(response => response.json())
                  .then(data => {
                      // Handle response if needed
                      console.log("Update response:", data);
                      console.log("Item with ID " + itemIdToDelete + " has been deleted.");

                      // Delete next item recursively
                      deleteItemsSequentially(index + 1);
                  })
                  .catch(error => {
                      console.error('Error updating cart:', error);
                  });
              } else {
                  console.log("All items have been deleted.");
                reloadCartArea();
              }
          }

          // Start deleting items sequentially
          deleteItemsSequentially(0);
      } else {
          console.log("No items found with the specified timestamp.");
      }
  }




            // Event delegation to handle delete button click
  document.addEventListener('click', function(event) {
    if (event.target.classList.contains('deleteButton')) {
        var deleteButtons = document.querySelectorAll('.deleteButton'); // Corrected selector
        deleteButtons.forEach(function(deleteButton) {
            deleteButton.style.pointerEvents = 'none';
            deleteButton.style.opacity = '0.5';
        });
        handleDeleteButtonClick(event);
    }
});


            // Fetch cart data and update allCartData variable periodically (e.g., every 30 seconds)
           setInterval(fetchCartDataAndUpdateVariable, 3000); // Adjust the interval as needed
        // Function to reload the cart area after items are deleted
      function reloadCartArea() {
          fetch(window.location.href)
              .then(response => response.text())
              .then(html => {
                  // Create a temporary div to hold the new content
                  const tempDiv = document.createElement('div');
                  tempDiv.innerHTML = html;

                  // Find the cart area element in the new content
                  const newCartArea = tempDiv.querySelector('#offcanvas-right');

                  // Replace the existing content of #offcanvas-right with the new content
                  const existingCartArea = document.querySelector('#offcanvas-right');
                  existingCartArea.innerHTML = newCartArea.innerHTML;
              })
              .catch(error => {
                  console.error('Error reloading cart area:', error);
              });
      }
</script>